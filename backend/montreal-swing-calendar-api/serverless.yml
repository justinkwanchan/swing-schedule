service: montreal-swing-calendar-api
frameworkVersion: '2 || 3'

provider:
  name: aws
  runtime: nodejs18.x
  lambdaHashingVersion: '20201221'
  iamRoleStatements:
    - Effect: Allow
      Action:
        - 'dynamodb:*'
      Resource:
        - 'arn:aws:dynamodb:us-east-1:934939427723:table/ApplicationTable'
        - 'arn:aws:dynamodb:us-east-1:934939427723:table/ApplicationTable/*'

functions:
  signup:
    handler: functions/user.signup
    events:
      - http:
          path: /signup
          method: post
          cors: true
    environment:
      TableName: ApplicationTable
  login:
    handler: functions/user.login
    events:
      - http:
          path: /login
          method: post
          cors: true
    environment:
      TableName: ApplicationTable
  createEvent:
    handler: functions/events.createEvent
    events:
      - http:
          path: /createEvent
          method: post
          cors: true
    environment:
      TableName: ApplicationTable
  queryEvent:
    handler: functions/events.queryEvent
    events:
      - http:
          path: /queryEvent
          method: post
          cors: true
    environment:
      TableName: ApplicationTable
  queryOccurrencesByEvent:
    handler: functions/events.queryOccurrencesByEvent
    events:
      - http:
          path: /queryOccurrencesByEvent
          method: post
          cors: true
    environment:
      TableName: ApplicationTable
  queryEventsByWeekOf:
    handler: functions/events.queryEventsByWeekOf
    events:
      - http:
          path: /queryEventsByWeekOf
          method: post
          cors: true
    environment:
      TableName: ApplicationTable
  queryEventsByUser:
    handler: functions/events.queryEventsByUser
    events:
      - http:
          path: /queryEventsByUser
          method: post
          cors: true
    environment:
      TableName: ApplicationTable
  updateEvent:
    handler: functions/events.updateEvent
    events:
      - http:
          path: /updateEvent
          method: post
          cors: true
    environment:
      TableName: ApplicationTable
  updateOccurrencesByEvent:
    handler: functions/events.updateOccurrencesByEvent
    events:
      - http:
          path: /updateOccurrencesByEvent
          method: post
          cors: true
    environment:
      TableName: ApplicationTable

resources:
  Resources:
    ApplicationTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: ApplicationTable
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
          - AttributeName: sk
            KeyType: RANGE
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
          - AttributeName: sk
            AttributeType: S
          - AttributeName: email
            AttributeType: S
        GlobalSecondaryIndexes:
          - IndexName: WEEKOF_GSI
            KeySchema:
              - AttributeName: sk
                KeyType: HASH
              - AttributeName: pk
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 5
              WriteCapacityUnits: 1
          - IndexName: EMAIL_GSI
            KeySchema:
              - AttributeName: email
                KeyType: HASH
              - AttributeName: pk
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 5
              WriteCapacityUnits: 1
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 1
